{"remainingRequest":"/home/dominika/graphql/gierka/poker-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dominika/graphql/gierka/poker-frontend/src/components/GraphQL.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dominika/graphql/gierka/poker-frontend/src/components/GraphQL.vue","mtime":1592139534859},{"path":"/home/dominika/graphql/gierka/poker-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dominika/graphql/gierka/poker-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dominika/graphql/gierka/poker-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dominika/graphql/gierka/poker-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCBncWwgZnJvbSAnZ3JhcGhxbC10YWcnOwovLwovLyBjb25zdCBTVUJTQ1JJQkVfVE9fU0VSVkVSID0gZ3FsYAovLyBzdWJzY3JpcHRpb24gewovLyAgIHN1YnNjcmliZXsKLy8gICAgIGNvbW11bml0eUNhcmRzewovLyAgICAgICByYW5rLAovLyAgICAgICBzdWl0Ci8vICAgICB9LAovLyAgICAgcGxheWVyc3sKLy8gICAgICAgbmFtZQovLyAgICAgICBzdGFjawovLyAgICAgICBzZWF0Ci8vICAgICB9Ci8vICAgfQovLyB9Ci8vIGA7CgovLyBjb25zdCBRVUVSWSA9IGdxbGAKLy8gcXVlcnl7Ci8vICAgZWNobyhtZXNzYWdlOiJzZGFzYSIpCi8vIH1gOwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBlY2hvOiBbXSwKICAgIH07CiAgfSwKICBtb3VudGVkKCkgewoKICB9LAogIGFwb2xsbzogewogICAgZWNobzogZ3FsYHF1ZXJ5e2VjaG8obWVzc2FnZToic2Rhc2EiKX1gCiAgICAvLyAkc3Vic2NyaWJlOiB7CiAgICAvLyAgIHN1YnNjcmlwdGlvbjogewogICAgLy8gICAgIC8vIGdyYXBocWwgcXVlcnkKICAgIC8vICAgICBxdWVyeTogU1VCU0NSSUJFX1RPX1NFUlZFUiwKICAgIC8vICAgICByZXN1bHQgKGRhdGEpIHsKICAgIC8vICAgICAgIC8vIExldCdzIHVwZGF0ZSB0aGUgbG9jYWwgZGF0YQogICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhkYXRhKQogICAgLy8gICAgICAgdGhpcy50YWJsZV9zdGF0ZSA9IGRhdGEuZGF0YS5zdWJzY3JpcHRpb24KICAgIC8vICAgICB9LAogICAgLy8gICB9CiAgICAvLyB9LAoKICB9LAp9Cgo="},{"version":3,"sources":["GraphQL.vue"],"names":[],"mappings":";;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"GraphQL.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>{{echo}}</div>\n</template>\n\n<script>\nimport gql from 'graphql-tag';\n//\n// const SUBSCRIBE_TO_SERVER = gql`\n// subscription {\n//   subscribe{\n//     communityCards{\n//       rank,\n//       suit\n//     },\n//     players{\n//       name\n//       stack\n//       seat\n//     }\n//   }\n// }\n// `;\n\n// const QUERY = gql`\n// query{\n//   echo(message:\"sdasa\")\n// }`;\n\nexport default {\n  data() {\n    return {\n      echo: [],\n    };\n  },\n  mounted() {\n\n  },\n  apollo: {\n    echo: gql`query{echo(message:\"sdasa\")}`\n    // $subscribe: {\n    //   subscription: {\n    //     // graphql query\n    //     query: SUBSCRIBE_TO_SERVER,\n    //     result (data) {\n    //       // Let's update the local data\n    //         console.log(data)\n    //       this.table_state = data.data.subscription\n    //     },\n    //   }\n    // },\n\n  },\n}\n\n</script>\n\n<style scoped>\n\n</style>"]}]}