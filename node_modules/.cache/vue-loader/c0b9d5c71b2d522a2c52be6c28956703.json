{"remainingRequest":"/home/dominika/graphql/gierka/poker-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dominika/graphql/gierka/poker-frontend/src/components/GraphQL.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dominika/graphql/gierka/poker-frontend/src/components/GraphQL.vue","mtime":1592134174825},{"path":"/home/dominika/graphql/gierka/poker-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dominika/graphql/gierka/poker-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dominika/graphql/gierka/poker-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dominika/graphql/gierka/poker-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCBncWwgZnJvbSAnZ3JhcGhxbC10YWcnOwoKY29uc3QgU1VCU0NSSUJFX1RPX1NFUlZFUiA9IGdxbGAKc3Vic2NyaXB0aW9uIHsKICBzdWJzY3JpYmV7CiAgICBjb21tdW5pdHlDYXJkc3sKICAgICAgcmFuaywKICAgICAgc3VpdAogICAgfSwKICAgIHBsYXllcnN7CiAgICAgIG5hbWUKICAgICAgc3RhY2sKICAgICAgc2VhdAogICAgfQogIH0KfQpgOwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YWJsZV9zdGF0ZTogW10sCiAgICB9OwogIH0sCiAgbW91bnRlZCgpIHsKCiAgfSwKICBhcG9sbG86IHsKICAgICRzdWJzY3JpYmU6IHsKICAgICAgc3Vic2NyaXB0aW9uOiB7CiAgICAgICAgLy8gZ3JhcGhxbCBxdWVyeQogICAgICAgIHF1ZXJ5OiBTVUJTQ1JJQkVfVE9fU0VSVkVSLAogICAgICAgIHJlc3VsdCAoZGF0YSkgewogICAgICAgICAgLy8gTGV0J3MgdXBkYXRlIHRoZSBsb2NhbCBkYXRhCiAgICAgICAgICB0aGlzLnRhYmxlX3N0YXRlID0gZGF0YS5kYXRhLnN1YnNjcmlwdGlvbgogICAgICAgIH0sCiAgICAgIH0KICAgIH0sCiAgfSwKfQoK"},{"version":3,"sources":["GraphQL.vue"],"names":[],"mappings":";;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GraphQL.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>{{table_state}}</div>\n</template>\n\n<script>\nimport gql from 'graphql-tag';\n\nconst SUBSCRIBE_TO_SERVER = gql`\nsubscription {\n  subscribe{\n    communityCards{\n      rank,\n      suit\n    },\n    players{\n      name\n      stack\n      seat\n    }\n  }\n}\n`;\n\nexport default {\n  data() {\n    return {\n      table_state: [],\n    };\n  },\n  mounted() {\n\n  },\n  apollo: {\n    $subscribe: {\n      subscription: {\n        // graphql query\n        query: SUBSCRIBE_TO_SERVER,\n        result (data) {\n          // Let's update the local data\n          this.table_state = data.data.subscription\n        },\n      }\n    },\n  },\n}\n\n</script>\n\n<style scoped>\n\n</style>"]}]}